# BasedOnStyle: LLVM
# UseTab: Never
# IndentWidth: 4
# TabWidth: 4
# AllowShortIfStatementsOnASingleLine: false
# ColumnLimit: 0
# # AccessModifierOffset: -4
# NamespaceIndentation: All
# FixNamespaceComments: false
# BreakAfterAttributes: Always
# IndentCaseLabels : true

# AllowShortLambdasOnASingleLine: Inline
# BreakBeforeBraces: Custom
# BraceWrapping:
#   AfterControlStatement: Always
#   AfterEnum: true
#   AfterStruct: false
#   AfterClass: true
#   AfterCaseLabel: true
#   AfterFunction: true
#   AfterNamespace: true
#   AfterUnion: true
#   AfterExternBlock: true
#   BeforeCatch: true
#   BeforeElse: true
#   BeforeWhile: false
  
#   BeforeLambdaBody: true

# LambdaBodyIndentation: Signature

# UseCRLF: false

# ---
# # options: https://clang.llvm.org/docs/ClangFormatStyleOptions.html
# BasedOnStyle: LLVM
# IndentWidth: 4
# # Must be 80 characters or less!
# ColumnLimit: 80
# # does (int) x instead of (int)x
# SpaceAfterCStyleCast: true
# # spaces, not tabs!
# UseTab: Never
# # if (x) doStuff()  is not allowed, bad style
# AllowShortIfStatementsOnASingleLine: false
# # 
# AlignTrailingComments: true
# SpacesBeforeTrailingComments: 3
# # change the next line to All for Alistair's textbook style
# AlwaysBreakAfterReturnType: TopLevelDefinitions
# #  #define SHORT_NAME       42
# #  #define LONGER_NAME      0x007f   # does nice spacing for macros
# AlignConsecutiveMacros: Consecutive
# # use \n instead of \r\n